#include "Matrix.h"

#define IDX2C(i,j,ld) (((j)*(ld))+(i))
#define DEBUG_PRINT 0
#define IDX(i,j,ld) (((i)*(ld)) + (j))
#define IMAGE_M 32
#define IMAGE_N 32
#define IMAGE_MxN IMAGE_M * IMAGE_N
#define VECTOR_SIZE 128
#define REDUCE_BLOCKSIZE 128
#define LOG2_REDUCE_BLOCKSIZE 7

#define COLOR_SIZE 16382
#define LUMINANCE_ADJUSTMENT 67108864//13421772


#define PCA_SIZE 512

typedef float MATRIX_TYPE;

#define host_T 10

//yes I know this isn't strict C, but I'm not that fussy...
#include <string>

//#define SRC_PATH "${PROJECT_SOURCE_DIR}"
#define DATA_PATH "/data/"

#define GENOMIC_DATA_COUNT 10
#define DATA_SIZE  (2627 + 956 + 999 + 1052 + 1339 + 8236 + 3510 + 3108 + 609 + 15943) //20000// 112827//1128274 //(26306 + 9581 + 10026 + 12788)
#define BUILD_IMAGE_GRID_SIZE DATA_SIZE/32


/*
typedef struct{
	float *data;
	int row;
	int col;
} MATRIXf;

typedef struct{
	unsigned int *data;
	int row;
	int col;
} MATRIXu;
*/
//float operator[](MATRIX mat, unsigned int index)
//{
//	return mat.data[index];
//}
