#define IDX2C(i,j,ld) (((j)*(ld))+(i))
#define DEBUG_PRINT 0
#define IDX(i,j,ld) (((i)*(ld)) + (j))
#define IMAGE_M 32
#define IMAGE_N 32
#define IMAGE_MxN IMAGE_M * IMAGE_N
#define VECTOR_SIZE 16
#define REDUCE_BLOCKSIZE 32
#define LOG2_REDUCE_BLOCKSIZE 5

#define COLOR_SIZE 16382
#define LUMINANCE_ADJUSTMENT 600

#define GENOMIC_DATA_COUNT 4

#define PCA_SIZE 512

typedef float MATRIX_TYPE;

#define host_T 10

//yes I know this isn't strict C, but I'm not that fussy...
#include <string>

//#define SRC_PATH "${PROJECT_SOURCE_DIR}"
#define DATA_PATH "/data/"

#define BUILD_IMAGE_GRID_SIZE 1812
#define DATA_SIZE 58000 //(26306 + 9581 + 10026 + 12788)

template<class T> struct MATRIX{
	T *data;
	int row;
	int col;
};

/*
typedef struct{
	float *data;
	int row;
	int col;
} MATRIXf;

typedef struct{
	unsigned int *data;
	int row;
	int col;
} MATRIXu;
*/
//float operator[](MATRIX mat, unsigned int index)
//{
//	return mat.data[index];
//}
